

    - currently i enable the 1% battery SOC wakeup when the battery is
	getting low.  but that's only possible if we're awake to
	notice.  i'm reluctant to enable the 1% battery SOC
	wakeup all the time, because that seems like a lot of
	wakeups.  too bad there's no "wake me at this batter
	threshold" wakeup.  if we created one in the EC -- reuse
	the battery_error event, and have it occur when we cross
	the 5% threshold, for instance -- we could use that to
	waken and shut down.  (we should fix the
	/sys/class/power_supply/olpc-battery/capacity_level
	output as well, but that's in the kernel.  currently it
	never hits "critical".) or, more simply:  create a new
	form of the "battery_soc" wakeup event that only wakes up
	on SOC changes below 10%.

	(the EC generates a critical battery SCI.  the kernel
	just has to watch for it.)

	if wakeup happened at 10%, then we could beep
	(configurable) every 1% thereafter until we hit shutdown.

    - should give a beep warning before critical battery shutdown.

    - add monitoring of cpu and/or network load to prevent sleeps
	when "busy" with other than user input

    - is there a dbus "i'm busy" indicator we could/should be
	looking at as well?

    - how should mesh and AP connections be treated wrt keeping the
	wireless alive?  if we sleep with an AP connection, will we
	eventually lose association anyway?

    - powerd-configure has no means of creating a new profile -- just
	editing existing ones.  (all that's needed is an existing file --
	current contents is optional.)

    - maybe convert powerd-config to present minutes, rather than seconds
