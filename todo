

    - currently i enable the 1% battery SOC wakeup when the battery is
	getting low, and check the voltage against critical (5.7V) then.
	but that's only possible if we're awake to
	notice.  i'm reluctant to enable the 1% battery SOC
	wakeup all the time, because that seems like a lot of
	wakeups.  too bad there's no "wake me at this battery
	threshold" wakeup -- preferably for voltage, which is what
	really matters.  (we should fix the
	/sys/class/power_supply/olpc-battery/capacity_level
	output as well, but that's in the kernel.  currently it
	never hits "critical".)

	[ later:  it seems the EC generates a critical battery
	SCI.  the kernel just needs to start watching for it. ]

	if wakeup happened a bit early then we could beep
	(configurable) every so often thereafter until we hit shutdown
	or the condition cleared.

    - add monitoring of cpu and/or network load to prevent sleeps
	when "busy" with other than user input

    - ohmd provides a "keystore" object which activities can use to
	set/get a few inhibit states.  i haven't been able to figure
	out how to monitor this traffic with dbus-monitor.  it's
	unfortunate that this api is ohmd-specific, but not surprising.
	it would be good to emulate it, since olpc-update, at least, and
	probably others use it to inhibit suspend while they're active.

    - how should mesh and AP connections be treated wrt keeping the
	wireless alive?  if we sleep with an AP connection, will we
	eventually lose association anyway?
