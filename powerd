#!/bin/sh


TMPDIR=/var/run
TMPDIR=/tmp

PROJECTDIR=/home/olpc/powerb
IMAGES=$PROJECTDIR
PPMTOFB=/home/olpc/bin/ppmtofb

FIFO=$TMPDIR/switchd-powerevents

CAPACITY_LEVEL=/sys/class/power_supply/olpc-battery/capacity_level
AC_ONLINE=/sys/class/power_supply/olpc-ac/online  # 1 / 0

CONFIGFILE=/etc/powerd.conf
CONFIGFILE=$PROJECTDIR/powerd.conf

USER_ACTIVITY=/var/run/olpc-kbdshim_activity

set -u

#splash()
#{
#
#    timeoutarg="$1"
#    shift
#    dialog --stdout $timeoutarg \
#	    --visit-items \
#	    --menu \
#	    "$1" \
#	    11 40 3 \
#	    "foo" ""
#}

yes_or_true()
{
    test $# = 0 && return 1

    case $1 in
    [yYtT]*) return 0 ;;
    *)     return 1 ;;
    esac
}


pleaseconfirm()
{
    $PPMTOFB --center --sigusr2 --delay 6 \
	    $IMAGES/pleaseconfirm.pgm \
	    $IMAGES/shuttingdown.pgm &&
    slumber
}

shuttingdown()
{
    nextsplash
    do_shutdown
}

unsplash()
{
    mv $TMPDIR/pwrdown_unsplash $TMPDIR/pwrdown_unsplash.$$ 2>/dev/null
    sh -x $TMPDIR/pwrdown_unsplash.$$ 2>/dev/null 
    rm -f $TMPDIR/pwrdown_unsplash.$$
}

nextsplash()
{
    mv $TMPDIR/pwrdown_nextsplash $TMPDIR/pwrdown_nextsplash.$$ 2>/dev/null
    sh -x $TMPDIR/pwrdown_nextsplash.$$ 2>/dev/null 
    rm -f $TMPDIR/pwrdown_nextsplash.$$
}

do_shutdown()
{
    # echo would shutdown -h now
    /sbin/shutdown -h now
}

#notify_of_shutdown()
#{
#	splash_powerdown "$@"
#	touch /tmp/suppress_shutdown  # no user intervention
#	touch /tmp/rcS_abort # in case this is happening during powerup
#	sleep 5
#}

check_battery()
{
    read capacity < $CAPACITY_LEVEL
    case $capacity in
    *critical*)
	notify_of_shutdown "\n\nBattery Level Critical"
	do_shutdown
	;;
    esac
}

user_activity()
{
    local now wasactive
    now=$(date +%s)
    wasactive=$(stat --format=%Y $USER_ACTIVITY)
    (( $now - $wasactive < $idletime ))
}

cpu_activity()
{
    return 0
}

network_activity()
{
    return 0
}

check_activity()
{
    if !user_activity && !cpu_activity && !network_activity
    then
	catnap
    fi
}

slumber()
{
    echo 1   >/sys/devices/platform/dcon/sleep 
    echo mem >/sys/power/state
    echo 0   >/sys/devices/platform/dcon/sleep 
    unsplash
    reevaluate
}

catnap()
{
}

setup_wakeups()
{
    for source in all ac_power battery_error battery_soc battery_state \
    	ebook_mode_change ps2event wlan
    do
	echo 1 > $WAKEUP_EVENTS/$source
    done

}

read_config()
{
    source $CONFIGFILE
}

check_acstate()
{
    read on_ac $AC_ONLINE
    if [ "$on_ac" = 1 ]
    then
	savepower=;
	yesortrue $config_SOLAR && savepower=true;
	yesortrue $config_ALWAYSON && savepower=;
    else
	savepower=true;
	yesortrue $config_ALWAYSON && savepower=;
    fi
}

check_lidstate()
{
}

check_ebookstate()
{
    if am_ebook
    then
	idletime=config_EBOOK_IDLETIME
    else
	idletime=config_IDLETIME
    fi

}


reevaluate()
{
    check_acstate
    check_lidstate
    check_ebookstate
}

be_daemon()
{

 set -x
 exec 2>/home/olpc/powerb/pbd.log

    trap "unsplash; exit" 1 2 3 15
    unsplash

    if [ ! -p $FIFO ]
    then
	rm -f $FIFO
	mkfifo $FIFO
    fi

    echo 0 >$TMPDIR/wasthen

    while :
    do
	while :
	do
	    if ! read -t 10 which more
	    then
		which=timeout
	    fi
	    case $which in
	    power)
		now=$(date +%s)
		read wasthen < $TMPDIR/wasthen
		if [ $(( $now - $wasthen )) -ge 5 ]
		then # first press
		    pleaseconfirm &
		    splashpid=$!
		    echo "killall -USR1 ppmtofb" \
				>$TMPDIR/pwrdown_unsplash
		    echo "killall -USR2 ppmtofb" \
				>$TMPDIR/pwrdown_nextsplash
		    ps axf >/tmp/pslist
		else # second press
		    shuttingdown
		fi
		echo $now >$TMPDIR/wasthen
		;;

	    lidclose)
		xset dpms force off
		backlight off
		slumber
		;;

	    lidopen)
		xset dpms 0 0 0
		xset dpms force on
		backlight restore
		;;

	    ebookclose)
		idletime=config_EBOOK_IDLETIME
		;;

	    ebookopen)
		idletime=config_IDLETIME
		;;

	    ac_connect|ac_disconnect|ac_changed)
		check_acstate
		;;

	    timeout)
		check_battery
		if [ "$savepower" ]
		then
		    check_activity
		fi
		;;

	    esac
	done <> $FIFO
	sleep 2
    done
}

# rm -f $TMPDIR/pwrdown_*

#case $1 in
#*confirm)
#    pleaseconfirm
#    exit
#    ;;
#esac

setup_wakeups

be_daemon

